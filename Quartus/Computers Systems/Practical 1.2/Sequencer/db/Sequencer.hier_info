|Sequencer
clk => PC~reg0.CLK
clk => ADDR_MUX~reg0.CLK
clk => ROM~reg0.CLK
clk => DATA_MUX~reg0.CLK
clk => DATA_OUT~reg0.CLK
clk => R0~reg0.CLK
clk => R1~reg0.CLK
clk => IR_EN~reg0.CLK
clk => IR_D2[2]~reg0.CLK
clk => IR_D2[1]~reg0.CLK
clk => IR_D2[0]~reg0.CLK
clk => ADD_SUB~reg0.CLK
clk => state~54.IN1
reset => PC~reg0.ENA
reset => ADDR_MUX~reg0.ENA
reset => ROM~reg0.ENA
reset => DATA_MUX~reg0.ENA
reset => DATA_OUT~reg0.ENA
reset => R0~reg0.ENA
reset => R1~reg0.ENA
reset => IR_EN~reg0.ENA
reset => ADD_SUB~reg0.ENA
reset => state~55.IN1
IR_Data[1] => ~NO_FANOUT~
IR_Data[2] => ~NO_FANOUT~
IR_Data[3] => ~NO_FANOUT~
IR_Data[4] => ~NO_FANOUT~
IR_Data[5] => ~NO_FANOUT~
IR_Data[6] => Equal~0.IN5
IR_Data[6] => Equal~1.IN5
IR_Data[6] => Equal~2.IN5
IR_Data[6] => Equal~3.IN5
IR_Data[6] => Equal~4.IN5
IR_Data[6] => Equal~5.IN5
IR_Data[6] => IR_D2[0]~reg0.DATAIN
IR_Data[7] => Equal~0.IN4
IR_Data[7] => Equal~1.IN4
IR_Data[7] => Equal~2.IN4
IR_Data[7] => Equal~3.IN4
IR_Data[7] => Equal~4.IN4
IR_Data[7] => Equal~5.IN4
IR_Data[7] => IR_D2[1]~reg0.DATAIN
IR_Data[8] => Equal~0.IN3
IR_Data[8] => Equal~1.IN3
IR_Data[8] => Equal~2.IN3
IR_Data[8] => Equal~3.IN3
IR_Data[8] => Equal~4.IN3
IR_Data[8] => Equal~5.IN3
IR_Data[8] => IR_D2[2]~reg0.DATAIN
PC <= PC~reg0.DB_MAX_OUTPUT_PORT_TYPE
IR_EN <= IR_EN~reg0.DB_MAX_OUTPUT_PORT_TYPE
ADDR_MUX <= ADDR_MUX~reg0.DB_MAX_OUTPUT_PORT_TYPE
ROM <= ROM~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_MUX <= DATA_MUX~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT <= DATA_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE
R0 <= R0~reg0.DB_MAX_OUTPUT_PORT_TYPE
R1 <= R1~reg0.DB_MAX_OUTPUT_PORT_TYPE
ADD_SUB <= ADD_SUB~reg0.DB_MAX_OUTPUT_PORT_TYPE
IR_D2[0] <= IR_D2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
IR_D2[1] <= IR_D2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
IR_D2[2] <= IR_D2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


