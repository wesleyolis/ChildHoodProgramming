--lpm_mux CASCADE_CHAIN=MANUAL DEVICE_FAMILY=Cyclone IGNORE_CASCADE_BUFFERS=OFF LPM_SIZE=2 LPM_WIDTH=5 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 4.0 cbx_lpm_mux 2003:10:21:14:09:22:SJ cbx_mgl 2004:01:13:14:00:54:SJ  VERSION_END


--  Copyright (C) 1988-2004 Altera Corporation
--  Any  megafunction  design,  and related netlist (encrypted  or  decrypted),
--  support information,  device programming or simulation file,  and any other
--  associated  documentation or information  provided by  Altera  or a partner
--  under  Altera's   Megafunction   Partnership   Program  may  be  used  only
--  to program  PLD  devices (but not masked  PLD  devices) from  Altera.   Any
--  other  use  of such  megafunction  design,  netlist,  support  information,
--  device programming or simulation file,  or any other  related documentation
--  or information  is prohibited  for  any  other purpose,  including, but not
--  limited to  modification,  reverse engineering,  de-compiling, or use  with
--  any other  silicon devices,  unless such use is  explicitly  licensed under
--  a separate agreement with  Altera  or a megafunction partner.  Title to the
--  intellectual property,  including patents,  copyrights,  trademarks,  trade
--  secrets,  or maskworks,  embodied in any such megafunction design, netlist,
--  support  information,  device programming or simulation file,  or any other
--  related documentation or information provided by  Altera  or a megafunction
--  partner, remains with Altera, the megafunction partner, or their respective
--  licensors. No other licenses, including any licenses needed under any third
--  party's intellectual property, are provided herein.



--synthesis_resources = lut 5 
SUBDESIGN mux_r8c
( 
	data[9..0]	:	input;
	result[4..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[4..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data18w[1..0]	: WIRE;
	w_data30w[1..0]	: WIRE;
	w_data42w[1..0]	: WIRE;
	w_data4w[1..0]	: WIRE;
	w_data54w[1..0]	: WIRE;
	w_result11w	: WIRE;
	w_result19w	: WIRE;
	w_result25w	: WIRE;
	w_result31w	: WIRE;
	w_result37w	: WIRE;
	w_result43w	: WIRE;
	w_result49w	: WIRE;
	w_result55w	: WIRE;
	w_result5w	: WIRE;
	w_result61w	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( w_result55w, w_result43w, w_result31w, w_result19w, w_result5w);
	sel_node[] = ( sel[0..0]);
	w_data18w[] = ( data[6..6], data[1..1]);
	w_data30w[] = ( data[7..7], data[2..2]);
	w_data42w[] = ( data[8..8], data[3..3]);
	w_data4w[] = ( data[5..5], data[0..0]);
	w_data54w[] = ( data[9..9], data[4..4]);
	w_result11w = ((sel_node[] & w_data4w[1..1]) # ((! sel_node[]) & w_data4w[0..0]));
	w_result19w = w_result25w;
	w_result25w = ((sel_node[] & w_data18w[1..1]) # ((! sel_node[]) & w_data18w[0..0]));
	w_result31w = w_result37w;
	w_result37w = ((sel_node[] & w_data30w[1..1]) # ((! sel_node[]) & w_data30w[0..0]));
	w_result43w = w_result49w;
	w_result49w = ((sel_node[] & w_data42w[1..1]) # ((! sel_node[]) & w_data42w[0..0]));
	w_result55w = w_result61w;
	w_result5w = w_result11w;
	w_result61w = ((sel_node[] & w_data54w[1..1]) # ((! sel_node[]) & w_data54w[0..0]));
END;
--VALID FILE
