1 REC ALTERNATING XY
2 40000 35000 1600
3 1
4 0
5 1
6 0
%
@P60=1
@P61=25
@P62=300
@P63=5
@P64=50
@P65=250
@P66=6
@P71=0
@P68=2
@P67=0
@P69=0
@P70=2


(P87 IS TEMP SWAPING VARIBLE)
(PASSING OF PARAMETERS)
(RUN PROGRAM)

(REVERSE PARAMETER)
@IF P67>(-1)
@P75=P67
@ELSE
@P75=0
@ENDIF

(RUNOUT OPERSITE SIDE PARAMETER,X=1,Y=2)
@IF P68>(-1)
@P76=P68
@ELSE
@P76=0
@ENDIF

(TYPE-X)
@IF P69>(-1)
@P77=P69
@ELSE
@P77=0
@ENDIF

(TYPE-Y)
@IF P70>(-1)
@P78=P70
@ELSE
@P78=P77
@ENDIF

(FORCE-AXIS AUTO=0,X=1,Y=2)
@IF P71>(-1)
@P79=P71
@ELSE
@P79=0
@ENDIF

(DEFAULT DRILLING PRGRAM)
@IF P80>0
@P80=P80
@ELSE
@P80=112
@ENDIF

(END OF PASSING PARAMETERS)

(Boundry Cut off)
@IF P77=1
(X-AXIS START,END,X-INCREMENT)
@P81=P61
@P82=P62
@P85=P63
@ENDIF

@IF P78=1
(Y-AXIS START,END,Y-INCREMENT)
@P83=P64
@P84=P65
@P86=P66
@ENDIF

(Boundry even spaced)
@IF P77=0
(X-AXIS START,END,X-INCREMENT)
@P81=P61
@P82=P62
@P85=((P62-P61)/(P63+1))
@ENDIF

@IF P78=0
(Y-AXIS START,END,Y-INCREMENT)
@P83=P64
@P84=P65
@P86=((P84-P83)/(P66+1))
@ENDIF

(Boundry Inner even spaced)
@IF P77=2
(X-AXIS START,END,X-INCREMENT)
@P81=P61
@P82=P62
@P85=((P62-P61)/(P63+1))
@P81=P81+P85
@P82=P82-P85+0.0000001
@ENDIF

@IF P78=2
(Y-AXIS START,END,Y-INCREMENT)
@P83=P64
@P84=P65
@P86=((P84-P83)/(P66+1))
@P83=P83+P86
@P84=P84-P86+0.000001
@ENDIF



(Boundry lEFT AND Inner even spaced)
@IF P77=3
(X-AXIS START,END,X-INCREMENT)
@P81=P61
@P82=P62
@P85=((P62-P61)/(P63))
@P82=P82-P85+0.0000001
@ENDIF

@IF P78=3
(Y-AXIS START,END,Y-INCREMENT)
@P83=P64
@P84=P65
@P86=((P84-P83)/(P66))
@P84=P84-P86+0.0000001
@ENDIF

(PARAMETER PASSING END)

(PROGRAM)
(AXIS SPEEDS X,Y)
@P96=35
@P97=40
(CALCULATE NUMBER OF ROWS COLS FOR DRILLING)
(AND USE IN PATH LENGTH CAL)
@P89=(INT((P82-P81)/P85)+1)
@P90=(INT((P84-P83)/P86)+1)

(DEFAULT PATH LENGTH CALCULATIONS Y=P99 X=P98)
@P98=(((((P89-1)*P85)/P96)*P90)+(((P90-1)*P86)/P97))
@P99=((((((P90-1)*P86)/P97)+(P85/P96))*P89)-(P85/P96))
(MODIFY LENGTH FOR RUNOUT)
@IF P76=1
@P87=(1-((P90-(INT((P90/2)))*2)))
@P98=P98-(((P86/P97)+(((P89-1)*P85)/P96))*P87)
@P93=0
@P93=POW((P86/P97))
@P93=P93+POW((((P89-1)*P85)/P96))
@P98=(P98+(SQRT(P93)*P87))
@ENDIF
@IF P76=2
@P87=(1-((P89-(INT((P89/2)))*2)))
@P99=P99-((P85/P96)*P87)
@P93=0
@P93=POW((P85/P96))
@P93=P93+POW((((P90-1)*P86)/P97))
@P99=(P99+(SQRT(P93)*P87))
@ENDIF

(REVERSING PARAMETER FOR X=1,Y=2)
@IF P75=1
@P87=P81
@P81=P82-((P82-P81)-(P85*(P89-1)))
@P82=P87
@P85=(P85*(-1))
@ENDIF
@IF P75=2
@P87=P83
@P83=P84-((P84-P83)-(P86*(P90-1)))
@P84=P87
@P86=(P86*(-1))
@ENDIF

(OVERIDE AXIS DIRECTIONS FOR X=1,Y=2)
@IF P79=1
@P99=1
@P98=0
@ENDIF
@IF P79=2
@P99=0
@P98=1
@ENDIF

(AXIS AUTO DIRECTION X,Y BY COMPARING Y=P99 X=P98)
@IF P99<P98
(Y-AXIS)
@P87=P90
@P90=P89
@P89=P87
@P94=0
@P95=1
@ELSE
(X-AXIS)
@P94=1
@P95=0
@ENDIF

(RETURN END POSITION DEPENDENT ON RUN OUT 76=1=X)
@P67=0
@IF P76=1
@P87=(INT(P75/2))
@P67=P95*(((P90+P87)-((INT((P90+P87)/2))*2)))
@P67=P67+P94*(1-P87)
(SET WHICH AXIS TO FLIP)
@P67=P67*2
@ENDIF

@IF P75#2
@P87=0
@ELSE
@P87=1
@ENDIF

@IF P76=2
@P67=P94*(((P90+P87)-((INT((P90+P87)/2))*2)))
@P67=P67+P95*(1-P87)
@ENDIF

(IS RUNOUT REQUIRED)
(DIRECTION=RUN DIRECTION)
@P87=P76
@IF (P94*P87)=1
@P76=1
@ELSE
@P76=0
@ENDIF
@IF (P95*P87)=2
@P76=1
@ELSE
@P76=P76
@ENDIF

(X-AXIS - CHEACK Y AXIS)
@IF ((INT(P90/2))*2)#P90
@P76=0
@ENDIF

(INITIALIZE BEIGING PARAMETERS FOR LOOP)
@P88=1
@P91=1
@P93=0

(CHEACK RUN PROGRAM)
@IF P60=1
@P60=(P89*P90)
@ELSE
@P60=0
@ENDIF
(WORK OUT LAST CUT ROW)
@P79=(P89)*(P90-1)

M98 K111 D=P60

(REST PROGRAM RUN)
@P60=0

.
